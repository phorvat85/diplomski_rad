version: '3.8'

services:

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    container_name: kafka
    ports:
      - "9094:9094" # external listener for host clients
    environment:
      # --- KRaft (no ZooKeeper) ---
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"

      # Listeners: INTERNAL for containers, EXTERNAL for host, CONTROLLER for KRaft
      KAFKA_LISTENERS: "INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:9094,CONTROLLER://0.0.0.0:9093"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:9092,EXTERNAL://localhost:9094"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"

      # Single-broker required tweaks
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1

      # Required by KRaft: keep this stable across restarts
      CLUSTER_ID: "${KAFKA_CLUSTER_ID}"

    volumes:
      - kafka-data:/var/lib/kafka/data
    restart: unless-stopped
    healthcheck:
      # Succeeds when the broker responds on the INTERNAL listener
      test: ["CMD-SHELL", "kafka-broker-api-versions --bootstrap-server localhost:9092 >/dev/null 2>&1"]
      interval: 5s
      timeout: 5s
      retries: 20
    # networks:
    #   - appnet

  auth-service:
    build:
      context: ./auth-service
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
      # Make sure your Spring config uses: bootstrap.servers=kafka:9092
    ports:
      - "8081:8080"
    restart: unless-stopped

  consumer-service:
    build:
      context: ./consumer-service
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
      # Make sure your Spring config uses: bootstrap.servers=kafka:9092
    ports:
      - "8082:8080"
    restart: unless-stopped

volumes:
  kafka-data:

# networks:
#   appnet:
#     driver: bridge